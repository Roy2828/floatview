// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.4.0'
    repositories {

        google()
        jcenter()

        mavenCentral()
        maven { url "https://maven.google.com" }
        // 华为开源镜像：https://mirrors.huaweicloud.com
        maven { url 'https://repo.huaweicloud.com/repository/maven' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://www.jitpack.io' }
        maven { url 'https://jitpack.io' }

    }
    dependencies {
       // classpath'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://maven.google.com" }
        // 华为开源镜像：https://mirrors.huaweicloud.com
        maven { url 'https://repo.huaweicloud.com/repository/maven' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://www.jitpack.io' }
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
   /* afterEvaluate {
        preBuild.dependsOn cleanCache
    }*/

    gradle.projectsEvaluated {
        tasks.matching {
            it.name.startsWith('assemble') && it.name.endsWith('Release')
        }.each { taskObj ->
            //  print("----Roy--$taskObj")
              taskObj.dependsOn 'clean'
             taskObj.dependsOn ':clean'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
